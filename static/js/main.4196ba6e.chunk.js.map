{"version":3,"sources":["utils/web3.js","utils/music.js","utils/connectors.js","utils/constants.js","utils/shortenAddress.js","App.js","reportWebVitals.js","index.js"],"names":["initWeb3","a","web3","detectEthereumProvider","mustBeMetaMask","provider","console","log","window","ethereum","Web3","on","_chainId","location","reload","_error","contractAddress","abi","ChainId","Mainnet","Ropsten","Rinkeby","Goerli","Kovan","Localhost","listOfMessages","InjectedConnector","supportedChainIds","shortenAddress","address","num","substring","length","App","musicContract","useRef","useState","setWeb3","doneCheckingForMetaMask","setDoneCheckingForMetaMask","connected","setConnected","connecting","setConnecting","isRinkebyChain","setIsRinkebyChain","userBalance","setBalance","hasPaid","setHasPaid","artist","setArtist","subscriptionPrice","setSubscriptionPrice","setSongCount","songs","setSongs","lastListener","setLastListener","songNameInputByArtist","setSongNameInputByArtist","creatorNameInputByArtist","setCreatorNameInputByArtist","genreInputByArtist","setGenreInputByArtist","imagUrlInputByArtist","setImagUrlInputByArtist","audioSrcInputByArtist","setAudioSrcInputByArtist","newAddressInputByArtist","setNewAddressInputByArtist","message","setMessage","requestingAddSong","setRequestingAddSong","requestingChangingAddress","setRequestingChangingAddress","isloading","setLoading","current","methods","songCount","call","getListenerStatus","selectedAddress","songslist","i","getSong","songData","title","_songName","creator","_creatorName","genre","_genre","image","_imgUrl","audioSrc","_audioSrc","song","push","useEffect","cancelled","web3Instance","request","method","eth","Contract","isConnected","error","handleAccountsChanged","initWeb3WithProvider","handler","owner","checkUserBalance","loadBlockchainData","getAccount","_event","_accounts","handleChangeNetwork","params","chainId","toString","handleUserBuySong","event","preventDefault","getAccounts","accounts","showMessage","NotificationManager","warning","buySong","send","from","value","result","success","setTimeout","userAdd","getBalance","balance","balanceInEther","utils","fromWei","msg","handleArtistSubmission","addSong","handleArtistAddressChangeSubmission","changeArtistAddress","className","type","onClick","disabled","src","href","target","parseFloat","toFixed","map","rowSpan","alt","url","width","height","playing","controls","style","alignItems","toLowerCase","onSubmit","onChange","required","name","selection","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4196ba6e.chunk.js","sourcesContent":["import detectEthereumProvider from \"@metamask/detect-provider\";\r\nimport Web3 from \"web3\";\r\n\r\nconst initWeb3 = async () => {\r\n  let web3 = null;\r\n\r\n  // Get the provider, or null if it couldn't be detected.\r\n  const provider = await detectEthereumProvider({\r\n    mustBeMetaMask: true,\r\n  });\r\n\r\n  if (provider) {\r\n    console.log(\"MetaMask Ethereum provider successfully detected!\");\r\n\r\n    const { ethereum } = window;\r\n    web3 = new Web3(provider);\r\n\r\n    // Reload the page when the currently connected chain changes.\r\n    ethereum.on(\"chainChanged\", (_chainId) => {\r\n      window.location.reload();\r\n    });\r\n\r\n    ethereum.on(\"disconnect\", (_error) => {\r\n      window.location.reload();\r\n    });\r\n  } else {\r\n    console.log(\"Please install MetaMask!\");\r\n  }\r\n\r\n  return web3;\r\n};\r\n\r\nexport default initWeb3;","export const contractAddress = \"0x7C4904cc8A5d6a47ac2aFD54791A9CbDB106163a\";\r\n\r\n\r\nexport const abi =[\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"songCount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"artistCreator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"LogSongRegistered\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"lastListener\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"LogSubscriptionSold\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"previousOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"OwnershipTransferred\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_songName\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_creatorName\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_genre\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_imgUrl\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_audioSrc\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"addSong\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"success\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"buySong\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"payable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address payable\",\r\n\t\t\t\t\"name\": \"_newArtist\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"changeArtistAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"_address\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getListenerStatus\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"enum MusicContrac.State\",\r\n\t\t\t\t\"name\": \"state\",\r\n\t\t\t\t\"type\": \"uint8\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_sId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getSong\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_songName\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_creatorName\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_genre\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_imgUrl\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_audioSrc\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"lastListener\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address payable\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"owner\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"renounceOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"songCount\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"subscriptionPrice\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n];","import { InjectedConnector } from \"@web3-react/injected-connector\";\r\n\r\nexport const ChainId = {\r\n  Mainnet: 1,\r\n  Ropsten: 3,\r\n  Rinkeby: 4,\r\n  Goerli: 5,\r\n  Kovan: 42,\r\n  Localhost: 1337,\r\n};\r\n\r\nexport const injected = new InjectedConnector({ supportedChainIds: [ChainId.Localhost, ChainId.Rinkeby] });","// const statesOfItems = [\"Processing\", \"Recieved\", \"Rewarded\"];\r\n\r\nconst listOfMessages = [\r\n    \"❌ You MUST fill the required fields!\",\r\n    \"⏳ Waiting on transaction success...\",\r\n    \"✅ Your song submission is successful\",\r\n    \"✅ Your request is successful\",\r\n    \"❌ Your request is faild\"\r\n  ];\r\n  \r\n  export {listOfMessages};","export const shortenAddress = (address, num = 3) => {\r\n    if (!address) return '';\r\n    return !!address && `${address.substring(0, num + 2)}...${address.substring(address.length - num - 1)}`;\r\n  };","import { useEffect, useRef, useState } from \"react\"; \nimport initWeb3 from \"./utils/web3\";\nimport { abi, contractAddress } from \"./utils/music\";\nimport ReactPlayer from \"react-player\";\nimport \"./App.css\";\nimport { ChainId } from \"./utils/connectors\";\nimport {listOfMessages } from \"./utils/constants\";\nimport { shortenAddress } from './utils/shortenAddress';\nimport 'react-notifications/lib/notifications.css';\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\n\nconst { ethereum } = window;\n\n\n\nfunction App() {\n  const musicContract = useRef(null);\n  const [web3, setWeb3] = useState(null);\n  const [doneCheckingForMetaMask, setDoneCheckingForMetaMask] = useState(false);\n  const [connected, setConnected] = useState(false);\n  const [connecting, setConnecting] = useState(false);\n  const [isRinkebyChain, setIsRinkebyChain] = useState(false);\n  const [userBalance, setBalance] = useState(\"\");\n \n\n\n  const [hasPaid, setHasPaid] = useState(false); \n  const [artist, setArtist] = useState(\"\");\n  const [subscriptionPrice, setSubscriptionPrice] = useState(\"\");\n  const [songCount, setSongCount] = useState(0);\n  const [songs, setSongs] = useState([]);\n  const [lastListener, setLastListener] =  useState();\n\n  const [songNameInputByArtist, setSongNameInputByArtist] = useState(\"\");\n  const [creatorNameInputByArtist, setCreatorNameInputByArtist] = useState(\"\");\n  const [genreInputByArtist, setGenreInputByArtist] = useState(\"\");\n  const [imagUrlInputByArtist, setImagUrlInputByArtist] = useState(\"\");\n  const [audioSrcInputByArtist, setAudioSrcInputByArtist] = useState(\"\");\n  const [newAddressInputByArtist, setNewAddressInputByArtist] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  // // const [status, setStatus] = useState(\"...\");\n\n  // const [addingRecyclable, setAddingRecyclable] = useState(false);\n  // const [rewardingUser, setRewardingUser] = useState(false);\n  const [requestingAddSong, setRequestingAddSong] = useState(false);\n  const [requestingChangingAddress, setRequestingChangingAddress] = useState(false);\n  const [isloading, setLoading] =  useState(false);\n\n  \n\n  useEffect(() => {\n    let cancelled = false;\n\n    async function initWeb3WithProvider() {\n      if (web3 === null) {\n        if (!cancelled) {\n          setDoneCheckingForMetaMask(false);\n          const web3Instance = await initWeb3();\n          setWeb3(web3Instance);\n\n          // Transactions done in this app must be done on the Rinkeby test network.\n          const chainId = await ethereum.request({ method: \"eth_chainId\" });\n          if (chainId === \"0x4\") {\n            setIsRinkebyChain(true);\n          }\n\n          setDoneCheckingForMetaMask(true);\n\n          if (web3Instance !== null) {\n            // Create Contract JS object.\n            musicContract.current = new web3Instance.eth.Contract(\n              abi,\n              contractAddress\n            );\n\n            // Check to see if user is already connected.\n            try {\n              const accounts = await ethereum.request({\n                method: \"eth_accounts\",\n              });\n              if (accounts.length > 0 && ethereum.isConnected()) {\n                setConnected(true);\n              }\n            } catch (error) {\n              console.error(error);\n            }\n\n            // Implement `accountsChanged` event handler.\n            ethereum.on(\"accountsChanged\", handleAccountsChanged);\n          }\n        }\n      }\n    }\n\n    initWeb3WithProvider();\n  \n\n    return () => {\n      cancelled = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  useEffect(() => {\n    let cancelled = false;\n    \n\n    if (connected) {\n      async function handler() {\n         const artist = await musicContract.current.methods.owner().call();\n         const subscriptionPrice = await musicContract.current.methods.subscriptionPrice().call();\n         const songCount = await musicContract.current.methods.songCount().call();\n         const lastListener = await musicContract.current.methods.lastListener().call();\n\n        if (!cancelled) {\n          setArtist(artist);\n          setSubscriptionPrice(subscriptionPrice);\n          await checkUserBalance();\n          setSongCount(songCount);\n          setLastListener(lastListener);\n        }\n      }\n    \n      handler();\n\n      loadBlockchainData()\n         \n    }\n\n    return () => {\n      cancelled = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [connected]);\n\n\n\n  // .call() to get blockchain data\n  // .send() to set transaction\n  async function loadBlockchainData() {\n   \n      setLoading(true);\n      const songCount = await musicContract.current.methods.songCount().call();\n      setSongCount(songCount);\n       \n      const lastListener = await musicContract.current.methods.lastListener().call();\n      setLastListener(lastListener);\n      const user = await musicContract.current.methods.getListenerStatus(ethereum.selectedAddress).call();\n\n      if(user === '1'){\n        setHasPaid(true);\n      }\n\n      const songslist = [];\n      // songs\n      for(var i = 0; i < songCount; i++) {\n          const songData = await musicContract.current.methods.getSong(i).call();\n  \n          const title = songData._songName;\n          // setTitle(title);\n          const creator = songData._creatorName;\n          // setCreator(creator);\n          const genre = songData._genre;\n          // setGenre(songData._genre);\n          // const creatorAddress = songData._creator;\n          // // setCreatorAddress(creatorAddress);\n          // const lastListener = songData._lastListener;\n          // // setLastListener(songData._lastListener);\n          const image = songData._imgUrl;\n          // setImage(image);\n          const audioSrc = songData._audioSrc;\n          // setAudioSrc(audioSrc);\n      \n          const song = {\n             i,\n            title, \n            creator, \n            genre,\n            // creatorAddress, \n            // lastListener, \n            image, \n            audioSrc};\n           \n          console.log(song);\n          songslist.push(song);\n        }\n\n     console.log(\"Data Loaded Successfully\");  \n     setSongs(songslist);\n     setLoading(false) \n    \n  }\n\n  const getAccount = async (_event) => {\n    setConnecting(true);\n    try {\n      await ethereum.request({ method: \"eth_requestAccounts\" });\n    } catch (error) {}\n    setConnecting(false);\n  };\n\n  const handleAccountsChanged = (_accounts) => {\n    window.location.reload();\n  };\n \n  const handleChangeNetwork = async () => {\n    if (window == null) {\n      return;\n    }\n\n    await window?.ethereum?.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: `0x${ChainId.Rinkeby.toString(16)}` }],\n    });\n  };\n\n\n  /**\n   *\n   * @dev All functions handling form submissions are defined in this section\n   */\n   const handleUserBuySong = async (event) => {\n      event.preventDefault();\n\n      const accounts = await web3.eth.getAccounts();\n      showMessage(listOfMessages[2]);\n      NotificationManager.warning(message, 'Wating', 12000);\n      await musicContract.current.methods\n        .buySong()\n        .send({\n          from: accounts[0],\n          value: subscriptionPrice,\n        },  function(error, result) {\n          if (error) {\n            console.log(`Error: transaction rejectd`);\n            showMessage(listOfMessages[5]);\n            NotificationManager.error(message, 'faild', 5000);\n          } \n          // else {\n          //   console.log('Success TX: <b>' + result + '</b>');\n          //   showMessage(listOfMessages[4]);\n          //   NotificationManager.success(message, 'Successfull');\n           \n          // }\n        });\n        showMessage(listOfMessages[4]);\n        NotificationManager.success(message, 'Successfull');\n        window.setTimeout(function(){window.location.reload(false)},3000)\n        console.log(\"Bueyd licence to listen the songs successfully\");\n  };\n\n  const checkUserBalance = async () => {\n    var userAdd = await web3.eth.getAccounts();\n    var balance = await web3.eth.getBalance(userAdd[0]);\n    var balanceInEther = web3.utils.fromWei(balance, \"ether\");\n    setBalance(balanceInEther);\n  };\n\n  const showMessage = async (msg) => {\n    setMessage(msg);\n  };\n\n\n\n  const handleArtistSubmission = async (event) => {\n    event.preventDefault();\n    \n    if (songNameInputByArtist === \"\" || creatorNameInputByArtist === \"\" || audioSrcInputByArtist === \"\" || imagUrlInputByArtist === \"\") {\n      showMessage(listOfMessages[0]);\n      NotificationManager.error(message, 'Uncomplete');\n    } else {\n      setRequestingAddSong(true);\n      showMessage(listOfMessages[2]);\n     \n      NotificationManager.warning(message, 'Waiting', 12000);\n      await musicContract.current.methods\n        .addSong(songNameInputByArtist, creatorNameInputByArtist, genreInputByArtist, imagUrlInputByArtist, audioSrcInputByArtist)\n        .send({\n          from: artist,\n        },  function(error, result) {\n          if (error) {\n            console.log(`Error: transaction rejectd`);\n            showMessage(listOfMessages[5]);\n            NotificationManager.error(message, 'Faild', 5000);\n          } \n          // else {\n          //   console.log('Success TX: <b>' + result + '</b>');\n            \n           \n          // }\n         }) ;\n    \n      // NotificationManager.warning(message, 'Waiting', 5000);\n      showMessage(listOfMessages[3]);\n      NotificationManager.success(message, 'Successfull');\n      \n      setRequestingAddSong(false);\n\n      window.setTimeout(function(){window.location.reload(false)},3000)\n      console.log(\"New Song Added successfully\"); \n    }\n  };\n\n  const handleArtistAddressChangeSubmission = async (event) => {\n    event.preventDefault();\n    \n    if (newAddressInputByArtist === \"\") {\n      showMessage(listOfMessages[0]);\n      NotificationManager.error(message, 'Uncomplete');\n    } else {\n      setRequestingChangingAddress(true);\n      showMessage(listOfMessages[2]);\n     \n      NotificationManager.warning(message, 'Waiting', 12000);\n      await musicContract.current.methods\n        .changeArtistAddress(newAddressInputByArtist)\n        .send({\n          from: artist,\n        },  function(error, result) {\n          if (error) {\n            console.log(`Error: transaction rejectd`);\n            showMessage(listOfMessages[5]);\n            NotificationManager.error(message, 'Faild', 5000);\n          // } else {\n          //   console.log('Success TX: <b>' + result + '</b>');\n            // showMessage(listOfMessages[4]);\n            // NotificationManager.success(message, 'Successfull');\n           }\n           });\n      \n      setRequestingChangingAddress(false);\n      showMessage(listOfMessages[4]);\n      NotificationManager.success(message, 'Successfull');\n\n      // window.location.reload(false);\n      window.setTimeout(function(){window.location.reload(false)},3000)\n      console.log(\"Address of the artist changed successfully\"); \n    }\n  };\n\n  const handleDropdown = (event) => {\n    var selection = event.target.value;\n\n    if (selection === \"DEFAULT\") {\n      setGenreInputByArtist(\"\");\n    } else {\n      setGenreInputByArtist(event.target.value);\n    }\n  };\n\n \n\n  \n  return (\n    <div className=\"App\">\n      {web3 === null && !doneCheckingForMetaMask && (\n        <div className=\"page-center\">\n          <div className=\"alert info\">\n            <h1 className=\"no-margin-top\">Music Contract</h1>\n            <p className=\"no-margin\">\n              Checking for MetaMask Ethereum Provider...\n            </p>\n          </div>\n        </div>\n      )}\n\n      {web3 === null && doneCheckingForMetaMask && (\n        <div className=\"page-center\">\n          <div className=\"alert error\">\n            <h1 className=\"no-margin-top\">Music Contract</h1>\n            <p className=\"no-margin\">\n              MetaMask is required to run this app! Please install MetaMask and\n              then refresh this page.\n            </p>\n          </div>\n        </div>\n      )}\n\n      {web3 !== null && doneCheckingForMetaMask && !isRinkebyChain && (\n        <div className=\"page-center\">\n          <section className=\"card\">\n            <h1 className=\"no-margin-top\">Music Contract</h1>\n            <p className=\"no-margin\">\n              You must be connected to the <strong>Rinkeby test network</strong>{\" \"}\n              for Ether transactions made via this app.\n            </p>\n            <div className=\"center\">\n            <button\n             className=\"btn primaryBtn\"\n             type=\"button\"\n             onClick={handleChangeNetwork}>Switch to Rinkeby</button>\n             </div>\n          </section>\n        </div>\n      )}\n\n      {web3 !== null && !connected && isRinkebyChain && (\n        <div className=\"page-center\">\n          <section className=\"card\">\n            <h1 className=\"no-margin-top\">Music Contract</h1>\n            <p>Connect with MetaMask, buy music and start listening!</p>\n            <div className=\"center\">\n              <button\n                className=\"btn primaryBtn\"\n                type=\"button\"\n                onClick={getAccount}\n                disabled={connecting}\n              >\n                Connect with MetaMask\n              </button>\n            </div>\n          </section>\n        </div>\n      )}\n\n     {web3 !== null && connected && isRinkebyChain && (\n        <div className=\"page-center\">\n           <section className=\"card\">\n              <h1 className=\"no-margin-top\">\n                <img className=\"App-logo\" src=\"https://img.icons8.com/plasticine/100/000000/headphones--v2.png\"/>\n                  Your Portal to Music\n              </h1>\n             \n            </section>\n              <span className=\"address-card\"><p> Your Address: {shortenAddress(ethereum.selectedAddress)} </p></span>\n              <span className=\"get-some-ether\"><p> You can get some ethere from <br/> <a href=\"https://faucet.rinkeby.io/\" target=\"_blank\">Rinkeby Authenticated Faucet</a> </p></span>\n              <span className=\"balance-card\"><p> ETH balance: {parseFloat(userBalance).toFixed(4)} </p></span>\n              <NotificationContainer/>\n              {(hasPaid !== true) && (<button\n                className=\"buyBtn\"\n                type=\"button\"\n                onClick={handleUserBuySong}\n              >\n                Buy Permission to Listen Song\n              </button>\n              )}\n              <span className=\"lastListener\"><p> Last listener: {shortenAddress(lastListener)} </p></span>\n            { isloading === false && songs.length !== 0 && (<div>\n              \n              <table className=\"center\">\n                <tbody>\n                { songs.map((songData, i) => (\n                  <tr key={i} >\n                    <td rowSpan={2}>\n                      <div className=\"audio-player\">\n                          <div className=\"track-info\">\n                                    <img className=\"artwork\" src={songData.image} alt={`track artwork for ${songData.title} by ${songData.creator}`} />\n                                    <h2 className=\"title\">{songData.title}</h2>\n                                    <h3 className=\"artist\">{songData.creator} - {songData.genre}</h3>\n                                    <h4 className=\"genre\"></h4>\n                                    { (hasPaid) && (<ReactPlayer\n                                        url= {songData.audioSrc}\n                                        width=\"278px\"\n                                        height=\"50px\"\n                                        playing={false}\n                                        controls={true}\n                                      />)} \n                                </div>\n                              </div>\n                          </td>\n                        </tr>))}\n                      </tbody>\n                    </table>\n                  </div>)}\n            \n            { isloading === false && songs.length === 0 && (\n                  <div>\n                    <p className=\"no-margin\" style={{ alignItems: 'center' }}>\n                    No Music Added 🤷</p>\n                  </div>\n            )}\n            {/* Only artist fills this form */}\n            \n           {artist.toLowerCase() === ethereum.selectedAddress && (\n              <div className=\"page-center\">\n              <div className=\"artist-fill-form\">\n                <form onSubmit={handleArtistSubmission}>\n                  <h4>Want to add a song?</h4>\n                  <div className=\"input-area\">\n                    <label>Enter song name:</label>{\" \"}\n                    <input\n                      value={songNameInputByArtist}\n                      onChange={(event) =>\n                        setSongNameInputByArtist(event.target.value)\n                      }\n                      required/>{\" \"}\n                  </div>\n                  <div className=\"input-area\">\n                    <label>Enter artist name:</label>{\" \"}\n                    <input\n                      value={creatorNameInputByArtist}\n                      onChange={(event) => setCreatorNameInputByArtist(event.target.value)}\n                      required/>{\" \"}\n                  </div>\n                  <div className=\"input-area\">\n                    <label>Select genre of song:</label>{\" \"}\n                    <select name=\"genre\" onChange={handleDropdown} required>\n                        <option value=\"DEFAULT\">-- Select an option --</option>\n                        <option value=\"Classical\">Classical</option>\n                        <option value=\"Pop\">Pop</option>\n                        <option value=\"Rock\">Rock</option>\n                        <option value=\"Country\">Country</option>\n                     </select>{\" \"}\n                  </div>\n                  <div className=\"input-area\">\n                    <label>Enter image url:</label>{\" \"}\n                    <input\n                      value={imagUrlInputByArtist}\n                      onChange={(event) => setImagUrlInputByArtist(event.target.value)}\n                    required/>{\" \"}\n                  </div>\n                  <div className=\"input-area\">\n                    <label>Enter audio url:</label>{\" \"}\n                    <input\n                      value={audioSrcInputByArtist}\n                      onChange={(event) => setAudioSrcInputByArtist(event.target.value)}\n                      required />{\" \"}\n                  </div>\n                  <div className=\"input-area\">\n                    <button\n                      className=\"btn primaryBtn\"\n                      type=\"submit\"\n                      disabled={requestingAddSong}\n                    >\n                      Submit Request\n                    </button>\n                  </div>\n                </form>\n               </div>\n               \n              </div>\n            \n            )} \n             {artist.toLowerCase() === ethereum.selectedAddress && (\n              <div className=\"page-center\">\n              <div className=\"artist-fill-form\">\n                <form onSubmit={handleArtistAddressChangeSubmission}>\n                  <h4>Want to change artist's Address?</h4>\n                  <div className=\"input-area\">\n                    <label>Enter a new Address:</label>{\" \"}\n                    <input\n                      value={newAddressInputByArtist}\n                      onChange={(event) =>\n                        setNewAddressInputByArtist(event.target.value)\n                      }\n                      required/>{\" \"}\n                  </div>\n                  <div className=\"input-area\">\n                    <button\n                      className=\"btn primaryBtn\"\n                      type=\"submit\"\n                      disabled={requestingChangingAddress}\n                    >\n                      Submit Request\n                    </button>\n                  </div>\n                </form>\n               </div>\n               \n              </div>\n            \n            )} \n     \n\n        </div>\n        \n      )}\n     \n      <footer>\n        &copy; Music Blockchain | Made by{\" \"}\n        <a className=\"App-link\"\n          href=\"https://github.com/Takwa2702/blockchain-developer-bootcamp-final-project\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          @Takwa2702 \n        </a>\n        <br />\n        Final Project for Consensys Blockchain Bootcamp 2021\n      </footer>\n\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}